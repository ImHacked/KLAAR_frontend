{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","columns","data","useTable","initialState","pageIndex","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","className","onClick","disabled","length","type","defaultValue","onChange","e","target","value","Number","style","width","App","useState","setData","a","setA","useEffect","axios","result","rows","useMemo","Header","accessor","for","name","id","filter","ifsc","toLowerCase","indexOf","bank_id","toString","branch","address","city","district","bank_name","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a835bdb.chunk.js","sourcesContent":["\r\nimport React from \"react\";\r\nimport { useTable, usePagination } from \"react-table\";\r\nimport \"./Table.css\";\r\n\r\n\r\n\r\nexport default function Table({ columns, data }) {\r\n        const {\r\n          getTableProps,\r\n          getTableBodyProps,\r\n          headerGroups,\r\n          prepareRow,\r\n          page, \r\n          canPreviousPage,\r\n          canNextPage,\r\n          pageOptions,\r\n          pageCount,\r\n          gotoPage,\r\n          nextPage,\r\n          previousPage,\r\n          setPageSize,\r\n          state: { pageIndex, pageSize },\r\n        } = useTable(\r\n          {\r\n            columns,\r\n            data,\r\n            initialState: { pageIndex: 2 },\r\n          },\r\n          usePagination\r\n        )\r\n \r\n  return (<>\r\n\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n       {}\r\n      <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n","import React, {useMemo, useState, useEffect} from \"react\";\nimport axios from 'axios'\nimport Table from \"./Table\";\n\nimport './App.css';\n\nfunction App() {\n    const [data, setData] = useState([]);\n    const [a, setA] = useState('');\n    useEffect(() => {\n        (async () => {\n            const result = await axios(\n                \"https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI\"\n            );\n            setData(result.data);\n            \n           \n        })();\n    }, []);\n    const columns = useMemo(() => [\n        {\n            Header: 'IFSC',\n            accessor: 'ifsc'\n        }, {\n            Header: 'Bank ID',\n            accessor: 'bank_id'\n        }, {\n            Header: 'Branch',\n            accessor: 'branch'\n        }, {\n            Header: 'Address',\n            accessor: 'address'\n        }, {\n            Header: 'City',\n            accessor: 'city'\n        }, {\n            Header: 'District',\n            accessor: 'district'\n        }, {\n            Header: 'State',\n            accessor: 'state'\n        }, {\n            Header: 'Bank Name',\n            accessor: 'bank_name'\n        }\n    ], [])\n\n    function search(rows) {\n        return rows.filter(\n            (row) => row.ifsc.toLowerCase().indexOf(a) > -1 || row.bank_id.toString().toLowerCase().indexOf(a) > -1 || row.branch.toLowerCase().indexOf(a) > -1 || row.address.toLowerCase().indexOf(a) > -1 || row.city.toLowerCase().indexOf(a) > -1 || row.district.toLowerCase().indexOf(a) > -1 || row.state.toLowerCase().indexOf(a) > -1 || row.bank_name.toLowerCase().indexOf(a) > -1\n        );\n    }\n\n    return (\n        <div className=\"App\">\n\n            <div className=\"heading\">\n                <h1>Bank Searching System</h1>\n            </div>\n            <div className=\"input__box\">\n                <label for=\"city\">Choose a City:</label>\n\n                <select name=\"city\" id=\"city\">\n                    <option value=\"Mumbai\">Mumbai</option>\n                    <option value=\"Bangalore\">Delhi</option>\n                    <option value=\"Delhi\">Chennai</option>\n                    <option value=\"Patna\">Kolkata</option>\n                    <option value=\"Agartala\">Hyderabad</option>\n                </select>\n                <input\n                    className=\"input\"\n                    type='text'\n                    value={a}\n                    onChange={(e) => setA(e.target.value)}/>\n            </div>\n            \n            <div className=\"table\">\n\n                <Table columns={columns} data={search(data)}></Table>\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}